import networkx as nx
from cycle_db import cycle_db, string_to_function
DB = cycle_db()

G = nx.DiGraph()
G.add_edges_from([(1, 2), (2, 1)])
DB.add(G, string_to_function('2*(p1 - 1)*(p2 - 1)*(p_1_2 - 1)*(p_2_1 - 1)'))

G = nx.DiGraph()
G.add_edges_from([(1, 2), (2, 3), (3, 1)])
DB.add(G, string_to_function('3*(p1 - 1)*(p2 - 1)*(p3 - 1)*(p_1_2 - 1)*(p_2_3 - 1)*(p_3_1 - 1)'))

G = nx.DiGraph()
G.add_edges_from([(1, 2), (1, 3), (2, 3), (3, 1)])
DB.add(G, string_to_function('(p1 - 1)*(p3 - 1)*(p_3_1 - 1)*(2*p2*p_1_2*p_1_3*p_2_3 - 2*p2*p_1_2*p_1_3 + p2*p_1_2*p_2_3 - p2*p_1_2 - 2*p2*p_1_3*p_2_3 + 2*p2*p_1_3 - p2*p_2_3 + p2 - 2*p_1_2*p_1_3*p_2_3 + 2*p_1_2*p_1_3 - p_1_2*p_2_3 + p_1_2 + 2*p_1_3*p_2_3 + p_2_3 - 3)'))

G = nx.DiGraph()
G.add_edges_from([(1, 2), (1, 3), (2, 1), (2, 3), (3, 1)])
DB.add(G, string_to_function('(p1 - 1)*(2*p2*p3*p_1_2*p_1_3*p_2_1*p_2_3*p_3_1 - 2*p2*p3*p_1_2*p_1_3*p_2_1*p_2_3 - 2*p2*p3*p_1_2*p_1_3*p_3_1 + 2*p2*p3*p_1_2*p_1_3 - 2*p2*p3*p_1_2*p_2_1*p_3_1 + 2*p2*p3*p_1_2*p_2_1 + p2*p3*p_1_2*p_2_3*p_3_1 - p2*p3*p_1_2*p_2_3 + p2*p3*p_1_2*p_3_1 - p2*p3*p_1_2 - 2*p2*p3*p_1_3*p_2_1*p_2_3*p_3_1 + 2*p2*p3*p_1_3*p_2_1*p_2_3 + 2*p2*p3*p_1_3*p_3_1 - 2*p2*p3*p_1_3 + 2*p2*p3*p_2_1*p_3_1 - 2*p2*p3*p_2_1 - p2*p3*p_2_3*p_3_1 + p2*p3*p_2_3 - p2*p3*p_3_1 + p2*p3 - 2*p2*p_1_2*p_1_3*p_2_1*p_2_3*p_3_1 + 2*p2*p_1_2*p_1_3*p_2_1*p_2_3 + 2*p2*p_1_2*p_1_3*p_3_1 - 2*p2*p_1_2*p_1_3 + 2*p2*p_1_2*p_2_1*p_3_1 - p2*p_1_2*p_2_3*p_3_1 + p2*p_1_2*p_2_3 - p2*p_1_2*p_3_1 - p2*p_1_2 + 2*p2*p_1_3*p_2_1*p_2_3*p_3_1 - 2*p2*p_1_3*p_2_1*p_2_3 - 2*p2*p_1_3*p_3_1 + 2*p2*p_1_3 - 2*p2*p_2_1*p_3_1 + p2*p_2_3*p_3_1 - p2*p_2_3 + p2*p_3_1 + p2 - 2*p3*p_1_2*p_1_3*p_2_1*p_2_3*p_3_1 + 2*p3*p_1_2*p_1_3*p_2_1*p_2_3 + 2*p3*p_1_2*p_1_3*p_3_1 - 2*p3*p_1_2*p_1_3 + 2*p3*p_1_2*p_2_1*p_3_1 - 2*p3*p_1_2*p_2_1 - p3*p_1_2*p_2_3*p_3_1 + p3*p_1_2*p_2_3 - p3*p_1_2*p_3_1 + p3*p_1_2 + 2*p3*p_1_3*p_2_1*p_2_3*p_3_1 - 2*p3*p_1_3*p_2_1*p_2_3 - 2*p3*p_2_1*p_3_1 + 2*p3*p_2_1 + p3*p_2_3*p_3_1 - p3*p_2_3 - p3*p_3_1 + p3 + 2*p_1_2*p_1_3*p_2_1*p_2_3*p_3_1 - 2*p_1_2*p_1_3*p_2_1*p_2_3 - 2*p_1_2*p_1_3*p_3_1 + 2*p_1_2*p_1_3 - 2*p_1_2*p_2_1*p_3_1 + p_1_2*p_2_3*p_3_1 - p_1_2*p_2_3 + p_1_2*p_3_1 + p_1_2 - 2*p_1_3*p_2_1*p_2_3*p_3_1 + 2*p_1_3*p_2_1*p_2_3 + 2*p_2_1*p_3_1 - p_2_3*p_3_1 + p_2_3 + p_3_1 - 3)'))

G = nx.DiGraph()
G.add_edges_from([(1, 2), (1, 3), (2, 1), (2, 3), (3, 1), (3, 2)])
DB.add(G, string_to_function('3*p1*p2*p3*p_1_2*p_1_3*p_2_1*p_2_3*p_3_1*p_3_2 - p1*p2*p3*p_1_2*p_1_3*p_2_1*p_2_3*p_3_1 - p1*p2*p3*p_1_2*p_1_3*p_2_1*p_2_3*p_3_2 - p1*p2*p3*p_1_2*p_1_3*p_2_1*p_2_3 - p1*p2*p3*p_1_2*p_1_3*p_2_1*p_3_1*p_3_2 + p1*p2*p3*p_1_2*p_1_3*p_2_1*p_3_1 + p1*p2*p3*p_1_2*p_1_3*p_2_1*p_3_2 - p1*p2*p3*p_1_2*p_1_3*p_2_1 - p1*p2*p3*p_1_2*p_1_3*p_2_3*p_3_1*p_3_2 + p1*p2*p3*p_1_2*p_1_3*p_2_3*p_3_1 - p1*p2*p3*p_1_2*p_1_3*p_2_3*p_3_2 + p1*p2*p3*p_1_2*p_1_3*p_2_3 - p1*p2*p3*p_1_2*p_1_3*p_3_1*p_3_2 - p1*p2*p3*p_1_2*p_1_3*p_3_1 + p1*p2*p3*p_1_2*p_1_3*p_3_2 + p1*p2*p3*p_1_2*p_1_3 - p1*p2*p3*p_1_2*p_2_1*p_2_3*p_3_1*p_3_2 + p1*p2*p3*p_1_2*p_2_1*p_2_3*p_3_1 + p1*p2*p3*p_1_2*p_2_1*p_2_3*p_3_2 - p1*p2*p3*p_1_2*p_2_1*p_2_3 - p1*p2*p3*p_1_2*p_2_1*p_3_1*p_3_2 - p1*p2*p3*p_1_2*p_2_1*p_3_1 - p1*p2*p3*p_1_2*p_2_1*p_3_2 + 3*p1*p2*p3*p_1_2*p_2_1 + p1*p2*p3*p_1_2*p_2_3*p_3_1*p_3_2 - p1*p2*p3*p_1_2*p_2_3*p_3_2 + p1*p2*p3*p_1_2*p_3_1*p_3_2 + p1*p2*p3*p_1_2*p_3_2 - 2*p1*p2*p3*p_1_2 - p1*p2*p3*p_1_3*p_2_1*p_2_3*p_3_1*p_3_2 - p1*p2*p3*p_1_3*p_2_1*p_2_3*p_3_1 + p1*p2*p3*p_1_3*p_2_1*p_2_3*p_3_2 + p1*p2*p3*p_1_3*p_2_1*p_2_3 + p1*p2*p3*p_1_3*p_2_1*p_3_1*p_3_2 - p1*p2*p3*p_1_3*p_2_1*p_3_1 + p1*p2*p3*p_1_3*p_2_3*p_3_1*p_3_2 - p1*p2*p3*p_1_3*p_2_3*p_3_1 - p1*p2*p3*p_1_3*p_2_3*p_3_2 + p1*p2*p3*p_1_3*p_2_3 - p1*p2*p3*p_1_3*p_3_1*p_3_2 + 3*p1*p2*p3*p_1_3*p_3_1 - 2*p1*p2*p3*p_1_3 - p1*p2*p3*p_2_1*p_2_3*p_3_1*p_3_2 + p1*p2*p3*p_2_1*p_2_3*p_3_1 - p1*p2*p3*p_2_1*p_2_3*p_3_2 + p1*p2*p3*p_2_1*p_2_3 + p1*p2*p3*p_2_1*p_3_1*p_3_2 + p1*p2*p3*p_2_1*p_3_1 - 2*p1*p2*p3*p_2_1 - p1*p2*p3*p_2_3*p_3_1*p_3_2 + 3*p1*p2*p3*p_2_3*p_3_2 - 2*p1*p2*p3*p_2_3 + p1*p2*p3*p_3_1*p_3_2 - 2*p1*p2*p3*p_3_1 - 2*p1*p2*p3*p_3_2 + 3*p1*p2*p3 - 3*p1*p2*p_1_2*p_1_3*p_2_1*p_2_3*p_3_1*p_3_2 + p1*p2*p_1_2*p_1_3*p_2_1*p_2_3*p_3_1 + p1*p2*p_1_2*p_1_3*p_2_1*p_2_3*p_3_2 + p1*p2*p_1_2*p_1_3*p_2_1*p_2_3 + p1*p2*p_1_2*p_1_3*p_2_1*p_3_1*p_3_2 - p1*p2*p_1_2*p_1_3*p_2_1*p_3_1 - p1*p2*p_1_2*p_1_3*p_2_1*p_3_2 + p1*p2*p_1_2*p_1_3*p_2_1 + p1*p2*p_1_2*p_1_3*p_2_3*p_3_1*p_3_2 - p1*p2*p_1_2*p_1_3*p_2_3*p_3_1 + p1*p2*p_1_2*p_1_3*p_2_3*p_3_2 - p1*p2*p_1_2*p_1_3*p_2_3 + p1*p2*p_1_2*p_1_3*p_3_1*p_3_2 + p1*p2*p_1_2*p_1_3*p_3_1 - p1*p2*p_1_2*p_1_3*p_3_2 - p1*p2*p_1_2*p_1_3 + p1*p2*p_1_2*p_2_1*p_2_3*p_3_1*p_3_2 - p1*p2*p_1_2*p_2_1*p_2_3*p_3_1 - p1*p2*p_1_2*p_2_1*p_2_3*p_3_2 + p1*p2*p_1_2*p_2_1*p_2_3 + p1*p2*p_1_2*p_2_1*p_3_1*p_3_2 + p1*p2*p_1_2*p_2_1*p_3_1 + p1*p2*p_1_2*p_2_1*p_3_2 - p1*p2*p_1_2*p_2_1 - p1*p2*p_1_2*p_2_3*p_3_1*p_3_2 + p1*p2*p_1_2*p_2_3*p_3_2 - p1*p2*p_1_2*p_3_1*p_3_2 - p1*p2*p_1_2*p_3_2 + p1*p2*p_1_3*p_2_1*p_2_3*p_3_1*p_3_2 + p1*p2*p_1_3*p_2_1*p_2_3*p_3_1 - p1*p2*p_1_3*p_2_1*p_2_3*p_3_2 - p1*p2*p_1_3*p_2_1*p_2_3 - p1*p2*p_1_3*p_2_1*p_3_1*p_3_2 + p1*p2*p_1_3*p_2_1*p_3_1 - p1*p2*p_1_3*p_2_3*p_3_1*p_3_2 + p1*p2*p_1_3*p_2_3*p_3_1 + p1*p2*p_1_3*p_2_3*p_3_2 - p1*p2*p_1_3*p_2_3 + p1*p2*p_1_3*p_3_1*p_3_2 - 3*p1*p2*p_1_3*p_3_1 + 2*p1*p2*p_1_3 + p1*p2*p_2_1*p_2_3*p_3_1*p_3_2 - p1*p2*p_2_1*p_2_3*p_3_1 + p1*p2*p_2_1*p_2_3*p_3_2 - p1*p2*p_2_1*p_2_3 - p1*p2*p_2_1*p_3_1*p_3_2 - p1*p2*p_2_1*p_3_1 + p1*p2*p_2_3*p_3_1*p_3_2 - 3*p1*p2*p_2_3*p_3_2 + 2*p1*p2*p_2_3 - p1*p2*p_3_1*p_3_2 + 2*p1*p2*p_3_1 + 2*p1*p2*p_3_2 - p1*p2 - 3*p1*p3*p_1_2*p_1_3*p_2_1*p_2_3*p_3_1*p_3_2 + p1*p3*p_1_2*p_1_3*p_2_1*p_2_3*p_3_1 + p1*p3*p_1_2*p_1_3*p_2_1*p_2_3*p_3_2 + p1*p3*p_1_2*p_1_3*p_2_1*p_2_3 + p1*p3*p_1_2*p_1_3*p_2_1*p_3_1*p_3_2 - p1*p3*p_1_2*p_1_3*p_2_1*p_3_1 - p1*p3*p_1_2*p_1_3*p_2_1*p_3_2 + p1*p3*p_1_2*p_1_3*p_2_1 + p1*p3*p_1_2*p_1_3*p_2_3*p_3_1*p_3_2 - p1*p3*p_1_2*p_1_3*p_2_3*p_3_1 + p1*p3*p_1_2*p_1_3*p_2_3*p_3_2 - p1*p3*p_1_2*p_1_3*p_2_3 + p1*p3*p_1_2*p_1_3*p_3_1*p_3_2 + p1*p3*p_1_2*p_1_3*p_3_1 - p1*p3*p_1_2*p_1_3*p_3_2 - p1*p3*p_1_2*p_1_3 + p1*p3*p_1_2*p_2_1*p_2_3*p_3_1*p_3_2 - p1*p3*p_1_2*p_2_1*p_2_3*p_3_1 - p1*p3*p_1_2*p_2_1*p_2_3*p_3_2 + p1*p3*p_1_2*p_2_1*p_2_3 + p1*p3*p_1_2*p_2_1*p_3_1*p_3_2 + p1*p3*p_1_2*p_2_1*p_3_1 + p1*p3*p_1_2*p_2_1*p_3_2 - 3*p1*p3*p_1_2*p_2_1 - p1*p3*p_1_2*p_2_3*p_3_1*p_3_2 + p1*p3*p_1_2*p_2_3*p_3_2 - p1*p3*p_1_2*p_3_1*p_3_2 - p1*p3*p_1_2*p_3_2 + 2*p1*p3*p_1_2 + p1*p3*p_1_3*p_2_1*p_2_3*p_3_1*p_3_2 + p1*p3*p_1_3*p_2_1*p_2_3*p_3_1 - p1*p3*p_1_3*p_2_1*p_2_3*p_3_2 - p1*p3*p_1_3*p_2_1*p_2_3 - p1*p3*p_1_3*p_2_1*p_3_1*p_3_2 + p1*p3*p_1_3*p_2_1*p_3_1 - p1*p3*p_1_3*p_2_3*p_3_1*p_3_2 + p1*p3*p_1_3*p_2_3*p_3_1 + p1*p3*p_1_3*p_2_3*p_3_2 - p1*p3*p_1_3*p_2_3 + p1*p3*p_1_3*p_3_1*p_3_2 - p1*p3*p_1_3*p_3_1 + p1*p3*p_2_1*p_2_3*p_3_1*p_3_2 - p1*p3*p_2_1*p_2_3*p_3_1 + p1*p3*p_2_1*p_2_3*p_3_2 - p1*p3*p_2_1*p_2_3 - p1*p3*p_2_1*p_3_1*p_3_2 - p1*p3*p_2_1*p_3_1 + 2*p1*p3*p_2_1 + p1*p3*p_2_3*p_3_1*p_3_2 - 3*p1*p3*p_2_3*p_3_2 + 2*p1*p3*p_2_3 - p1*p3*p_3_1*p_3_2 + 2*p1*p3*p_3_2 - p1*p3 + 3*p1*p_1_2*p_1_3*p_2_1*p_2_3*p_3_1*p_3_2 - p1*p_1_2*p_1_3*p_2_1*p_2_3*p_3_1 - p1*p_1_2*p_1_3*p_2_1*p_2_3*p_3_2 - p1*p_1_2*p_1_3*p_2_1*p_2_3 - p1*p_1_2*p_1_3*p_2_1*p_3_1*p_3_2 + p1*p_1_2*p_1_3*p_2_1*p_3_1 + p1*p_1_2*p_1_3*p_2_1*p_3_2 - p1*p_1_2*p_1_3*p_2_1 - p1*p_1_2*p_1_3*p_2_3*p_3_1*p_3_2 + p1*p_1_2*p_1_3*p_2_3*p_3_1 - p1*p_1_2*p_1_3*p_2_3*p_3_2 + p1*p_1_2*p_1_3*p_2_3 - p1*p_1_2*p_1_3*p_3_1*p_3_2 - p1*p_1_2*p_1_3*p_3_1 + p1*p_1_2*p_1_3*p_3_2 + p1*p_1_2*p_1_3 - p1*p_1_2*p_2_1*p_2_3*p_3_1*p_3_2 + p1*p_1_2*p_2_1*p_2_3*p_3_1 + p1*p_1_2*p_2_1*p_2_3*p_3_2 - p1*p_1_2*p_2_1*p_2_3 - p1*p_1_2*p_2_1*p_3_1*p_3_2 - p1*p_1_2*p_2_1*p_3_1 - p1*p_1_2*p_2_1*p_3_2 + p1*p_1_2*p_2_1 + p1*p_1_2*p_2_3*p_3_1*p_3_2 - p1*p_1_2*p_2_3*p_3_2 + p1*p_1_2*p_3_1*p_3_2 + p1*p_1_2*p_3_2 - p1*p_1_3*p_2_1*p_2_3*p_3_1*p_3_2 - p1*p_1_3*p_2_1*p_2_3*p_3_1 + p1*p_1_3*p_2_1*p_2_3*p_3_2 + p1*p_1_3*p_2_1*p_2_3 + p1*p_1_3*p_2_1*p_3_1*p_3_2 - p1*p_1_3*p_2_1*p_3_1 + p1*p_1_3*p_2_3*p_3_1*p_3_2 - p1*p_1_3*p_2_3*p_3_1 - p1*p_1_3*p_2_3*p_3_2 + p1*p_1_3*p_2_3 - p1*p_1_3*p_3_1*p_3_2 + p1*p_1_3*p_3_1 - p1*p_2_1*p_2_3*p_3_1*p_3_2 + p1*p_2_1*p_2_3*p_3_1 - p1*p_2_1*p_2_3*p_3_2 + p1*p_2_1*p_2_3 + p1*p_2_1*p_3_1*p_3_2 + p1*p_2_1*p_3_1 - p1*p_2_3*p_3_1*p_3_2 + 3*p1*p_2_3*p_3_2 - 2*p1*p_2_3 + p1*p_3_1*p_3_2 - 2*p1*p_3_2 - p1 - 3*p2*p3*p_1_2*p_1_3*p_2_1*p_2_3*p_3_1*p_3_2 + p2*p3*p_1_2*p_1_3*p_2_1*p_2_3*p_3_1 + p2*p3*p_1_2*p_1_3*p_2_1*p_2_3*p_3_2 + p2*p3*p_1_2*p_1_3*p_2_1*p_2_3 + p2*p3*p_1_2*p_1_3*p_2_1*p_3_1*p_3_2 - p2*p3*p_1_2*p_1_3*p_2_1*p_3_1 - p2*p3*p_1_2*p_1_3*p_2_1*p_3_2 + p2*p3*p_1_2*p_1_3*p_2_1 + p2*p3*p_1_2*p_1_3*p_2_3*p_3_1*p_3_2 - p2*p3*p_1_2*p_1_3*p_2_3*p_3_1 + p2*p3*p_1_2*p_1_3*p_2_3*p_3_2 - p2*p3*p_1_2*p_1_3*p_2_3 + p2*p3*p_1_2*p_1_3*p_3_1*p_3_2 + p2*p3*p_1_2*p_1_3*p_3_1 - p2*p3*p_1_2*p_1_3*p_3_2 - p2*p3*p_1_2*p_1_3 + p2*p3*p_1_2*p_2_1*p_2_3*p_3_1*p_3_2 - p2*p3*p_1_2*p_2_1*p_2_3*p_3_1 - p2*p3*p_1_2*p_2_1*p_2_3*p_3_2 + p2*p3*p_1_2*p_2_1*p_2_3 + p2*p3*p_1_2*p_2_1*p_3_1*p_3_2 + p2*p3*p_1_2*p_2_1*p_3_1 + p2*p3*p_1_2*p_2_1*p_3_2 - 3*p2*p3*p_1_2*p_2_1 - p2*p3*p_1_2*p_2_3*p_3_1*p_3_2 + p2*p3*p_1_2*p_2_3*p_3_2 - p2*p3*p_1_2*p_3_1*p_3_2 - p2*p3*p_1_2*p_3_2 + 2*p2*p3*p_1_2 + p2*p3*p_1_3*p_2_1*p_2_3*p_3_1*p_3_2 + p2*p3*p_1_3*p_2_1*p_2_3*p_3_1 - p2*p3*p_1_3*p_2_1*p_2_3*p_3_2 - p2*p3*p_1_3*p_2_1*p_2_3 - p2*p3*p_1_3*p_2_1*p_3_1*p_3_2 + p2*p3*p_1_3*p_2_1*p_3_1 - p2*p3*p_1_3*p_2_3*p_3_1*p_3_2 + p2*p3*p_1_3*p_2_3*p_3_1 + p2*p3*p_1_3*p_2_3*p_3_2 - p2*p3*p_1_3*p_2_3 + p2*p3*p_1_3*p_3_1*p_3_2 - 3*p2*p3*p_1_3*p_3_1 + 2*p2*p3*p_1_3 + p2*p3*p_2_1*p_2_3*p_3_1*p_3_2 - p2*p3*p_2_1*p_2_3*p_3_1 + p2*p3*p_2_1*p_2_3*p_3_2 - p2*p3*p_2_1*p_2_3 - p2*p3*p_2_1*p_3_1*p_3_2 - p2*p3*p_2_1*p_3_1 + 2*p2*p3*p_2_1 + p2*p3*p_2_3*p_3_1*p_3_2 - p2*p3*p_2_3*p_3_2 - p2*p3*p_3_1*p_3_2 + 2*p2*p3*p_3_1 - p2*p3 + 3*p2*p_1_2*p_1_3*p_2_1*p_2_3*p_3_1*p_3_2 - p2*p_1_2*p_1_3*p_2_1*p_2_3*p_3_1 - p2*p_1_2*p_1_3*p_2_1*p_2_3*p_3_2 - p2*p_1_2*p_1_3*p_2_1*p_2_3 - p2*p_1_2*p_1_3*p_2_1*p_3_1*p_3_2 + p2*p_1_2*p_1_3*p_2_1*p_3_1 + p2*p_1_2*p_1_3*p_2_1*p_3_2 - p2*p_1_2*p_1_3*p_2_1 - p2*p_1_2*p_1_3*p_2_3*p_3_1*p_3_2 + p2*p_1_2*p_1_3*p_2_3*p_3_1 - p2*p_1_2*p_1_3*p_2_3*p_3_2 + p2*p_1_2*p_1_3*p_2_3 - p2*p_1_2*p_1_3*p_3_1*p_3_2 - p2*p_1_2*p_1_3*p_3_1 + p2*p_1_2*p_1_3*p_3_2 + p2*p_1_2*p_1_3 - p2*p_1_2*p_2_1*p_2_3*p_3_1*p_3_2 + p2*p_1_2*p_2_1*p_2_3*p_3_1 + p2*p_1_2*p_2_1*p_2_3*p_3_2 - p2*p_1_2*p_2_1*p_2_3 - p2*p_1_2*p_2_1*p_3_1*p_3_2 - p2*p_1_2*p_2_1*p_3_1 - p2*p_1_2*p_2_1*p_3_2 + p2*p_1_2*p_2_1 + p2*p_1_2*p_2_3*p_3_1*p_3_2 - p2*p_1_2*p_2_3*p_3_2 + p2*p_1_2*p_3_1*p_3_2 + p2*p_1_2*p_3_2 - p2*p_1_3*p_2_1*p_2_3*p_3_1*p_3_2 - p2*p_1_3*p_2_1*p_2_3*p_3_1 + p2*p_1_3*p_2_1*p_2_3*p_3_2 + p2*p_1_3*p_2_1*p_2_3 + p2*p_1_3*p_2_1*p_3_1*p_3_2 - p2*p_1_3*p_2_1*p_3_1 + p2*p_1_3*p_2_3*p_3_1*p_3_2 - p2*p_1_3*p_2_3*p_3_1 - p2*p_1_3*p_2_3*p_3_2 + p2*p_1_3*p_2_3 - p2*p_1_3*p_3_1*p_3_2 + 3*p2*p_1_3*p_3_1 - 2*p2*p_1_3 - p2*p_2_1*p_2_3*p_3_1*p_3_2 + p2*p_2_1*p_2_3*p_3_1 - p2*p_2_1*p_2_3*p_3_2 + p2*p_2_1*p_2_3 + p2*p_2_1*p_3_1*p_3_2 + p2*p_2_1*p_3_1 - p2*p_2_3*p_3_1*p_3_2 + p2*p_2_3*p_3_2 + p2*p_3_1*p_3_2 - 2*p2*p_3_1 - p2 + 3*p3*p_1_2*p_1_3*p_2_1*p_2_3*p_3_1*p_3_2 - p3*p_1_2*p_1_3*p_2_1*p_2_3*p_3_1 - p3*p_1_2*p_1_3*p_2_1*p_2_3*p_3_2 - p3*p_1_2*p_1_3*p_2_1*p_2_3 - p3*p_1_2*p_1_3*p_2_1*p_3_1*p_3_2 + p3*p_1_2*p_1_3*p_2_1*p_3_1 + p3*p_1_2*p_1_3*p_2_1*p_3_2 - p3*p_1_2*p_1_3*p_2_1 - p3*p_1_2*p_1_3*p_2_3*p_3_1*p_3_2 + p3*p_1_2*p_1_3*p_2_3*p_3_1 - p3*p_1_2*p_1_3*p_2_3*p_3_2 + p3*p_1_2*p_1_3*p_2_3 - p3*p_1_2*p_1_3*p_3_1*p_3_2 - p3*p_1_2*p_1_3*p_3_1 + p3*p_1_2*p_1_3*p_3_2 + p3*p_1_2*p_1_3 - p3*p_1_2*p_2_1*p_2_3*p_3_1*p_3_2 + p3*p_1_2*p_2_1*p_2_3*p_3_1 + p3*p_1_2*p_2_1*p_2_3*p_3_2 - p3*p_1_2*p_2_1*p_2_3 - p3*p_1_2*p_2_1*p_3_1*p_3_2 - p3*p_1_2*p_2_1*p_3_1 - p3*p_1_2*p_2_1*p_3_2 + 3*p3*p_1_2*p_2_1 + p3*p_1_2*p_2_3*p_3_1*p_3_2 - p3*p_1_2*p_2_3*p_3_2 + p3*p_1_2*p_3_1*p_3_2 + p3*p_1_2*p_3_2 - 2*p3*p_1_2 - p3*p_1_3*p_2_1*p_2_3*p_3_1*p_3_2 - p3*p_1_3*p_2_1*p_2_3*p_3_1 + p3*p_1_3*p_2_1*p_2_3*p_3_2 + p3*p_1_3*p_2_1*p_2_3 + p3*p_1_3*p_2_1*p_3_1*p_3_2 - p3*p_1_3*p_2_1*p_3_1 + p3*p_1_3*p_2_3*p_3_1*p_3_2 - p3*p_1_3*p_2_3*p_3_1 - p3*p_1_3*p_2_3*p_3_2 + p3*p_1_3*p_2_3 - p3*p_1_3*p_3_1*p_3_2 + p3*p_1_3*p_3_1 - p3*p_2_1*p_2_3*p_3_1*p_3_2 + p3*p_2_1*p_2_3*p_3_1 - p3*p_2_1*p_2_3*p_3_2 + p3*p_2_1*p_2_3 + p3*p_2_1*p_3_1*p_3_2 + p3*p_2_1*p_3_1 - 2*p3*p_2_1 - p3*p_2_3*p_3_1*p_3_2 + p3*p_2_3*p_3_2 + p3*p_3_1*p_3_2 - p3 - 3*p_1_2*p_1_3*p_2_1*p_2_3*p_3_1*p_3_2 + p_1_2*p_1_3*p_2_1*p_2_3*p_3_1 + p_1_2*p_1_3*p_2_1*p_2_3*p_3_2 + p_1_2*p_1_3*p_2_1*p_2_3 + p_1_2*p_1_3*p_2_1*p_3_1*p_3_2 - p_1_2*p_1_3*p_2_1*p_3_1 - p_1_2*p_1_3*p_2_1*p_3_2 + p_1_2*p_1_3*p_2_1 + p_1_2*p_1_3*p_2_3*p_3_1*p_3_2 - p_1_2*p_1_3*p_2_3*p_3_1 + p_1_2*p_1_3*p_2_3*p_3_2 - p_1_2*p_1_3*p_2_3 + p_1_2*p_1_3*p_3_1*p_3_2 + p_1_2*p_1_3*p_3_1 - p_1_2*p_1_3*p_3_2 - p_1_2*p_1_3 + p_1_2*p_2_1*p_2_3*p_3_1*p_3_2 - p_1_2*p_2_1*p_2_3*p_3_1 - p_1_2*p_2_1*p_2_3*p_3_2 + p_1_2*p_2_1*p_2_3 + p_1_2*p_2_1*p_3_1*p_3_2 + p_1_2*p_2_1*p_3_1 + p_1_2*p_2_1*p_3_2 - p_1_2*p_2_1 - p_1_2*p_2_3*p_3_1*p_3_2 + p_1_2*p_2_3*p_3_2 - p_1_2*p_3_1*p_3_2 - p_1_2*p_3_2 + p_1_3*p_2_1*p_2_3*p_3_1*p_3_2 + p_1_3*p_2_1*p_2_3*p_3_1 - p_1_3*p_2_1*p_2_3*p_3_2 - p_1_3*p_2_1*p_2_3 - p_1_3*p_2_1*p_3_1*p_3_2 + p_1_3*p_2_1*p_3_1 - p_1_3*p_2_3*p_3_1*p_3_2 + p_1_3*p_2_3*p_3_1 + p_1_3*p_2_3*p_3_2 - p_1_3*p_2_3 + p_1_3*p_3_1*p_3_2 - p_1_3*p_3_1 + p_2_1*p_2_3*p_3_1*p_3_2 - p_2_1*p_2_3*p_3_1 + p_2_1*p_2_3*p_3_2 - p_2_1*p_2_3 - p_2_1*p_3_1*p_3_2 - p_2_1*p_3_1 + p_2_3*p_3_1*p_3_2 - p_2_3*p_3_2 - p_3_1*p_3_2 + 3'))

